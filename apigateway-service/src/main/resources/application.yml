spring:
  application:
    name: apigateway-service
  cloud:
    gateway:
      routes:
        - id: user-service-login
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/?(?<segment>.*), /$\{segment}
        - id: user-service-users
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/?(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/?(?<segment>.*), /$\{segment}
            - AuthorizationHeader
        - id: catalog-service
          uri: lb://CATALOG-SERVICE
          predicates:
            - Path=/catalog-service/**
          filters:
            - RewritePath=/catalog-service/?(?<segment>.*), /$\{segment}
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RewritePath=/order-service/?(?<segment>.*), /$\{segment}
        - id: first-service
          uri: lb://FIRST-SERVICE-SCG
          predicates:
            - Path=/first-service/**
          filters:
            - Custom
        - id: second-service
          uri: lb://SECOND-SERVICE-SCG
          predicates:
            - Path=/second-service/**
          filters:
            - name: Custom
            - name: Logging
              args:
                baseMessage: Hi, there. Logging
                preLogger: true
                postLogger: true

      default-filters:
        - name: Global
          args:
            baseMessage: String Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
#            - AddRequestHeader=second-request, second-request-header2
#            - AddResponseHeader=second-response, second-response-header2

server:
  port: 8000
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
token:
  secret: userTokenVeryVerySecretKeyToUserTokenVeryVerySecretKey
